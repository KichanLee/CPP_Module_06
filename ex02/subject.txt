

Implement a Base class that has a public virtual destructor only. 

1. 오로지 공개 가상 소멸자만 가지는 **`Base`** 클래스를 구현하십시오.

Create three empty classes A, B and C, that publicly inherit from Base.

2. **`A`**, **`B`**, **`C`**라는 세 개의 비어있는 클래스를 생성하고, 
이들은 모두 **`Base`**를 공개 상속해야 합니다. 


이 네 개의 클래스는 규범적인 형태로 디자인될 필요는 없습니다. (오소독스 폼 x)

3. 다음 함수들을 구현하십시오:
    
    Base * generate(void);
    
    It randomly instanciates A, B or C and returns the instance as a Base pointer. 
    Feel free to use anything you like for the random choice implementation.
    
    이 함수는 A, B 또는 C 중 하나를 무작위로 생성하고 해당 인스턴스를 Base 포인터로 반환해야 합니다. 
    무작위 선택을 구현하는 데 사용하는 방법은 자유롭게 선택하십시오.
    
    void identify(Base* p); 
    
    It prints the actual type of the object pointed to by p: "A", "B" or "C". 
    Using a pointer inside this function is forbidden.
    

    이 함수는 p가 가리키는 객체의 실제 유형을 출력해야 합니다. 
    출력 형식은 "A", "B" 또는 "C"여야 합니다.
    
    
    void identify(Base& p); 
    
    
    이 함수는 p가 가리키는 객체의 실제 유형을 출력해야 합니다. 
    이 함수 내에서 포인터 사용이 금지되어야 합니다.

4. typeinfo 헤더를 사용하는 것이 금지되어야 합니다.

5. 모든 것이 예상대로 작동하는지 확인하는 프로그램을 작성하십시오.

=================================================================================
